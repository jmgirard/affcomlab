---
title: ""
pagetitle: "Publications | AffCom Lab"
toc: false
execute:
  echo: false
  warning: false
  message: false
---

```{=html}
<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="index.html">Home</a></li>
    <li class="breadcrumb-item active" aria-current="page">Publications</li>
  </ol>
</nav>
```

```{css}
.timeline {
  margin-left: 0;
  padding-left: 0;
}

.year-group {
  position: relative;
  margin-left: 1rem;
  padding-left: 1.25rem;
  margin-bottom: 1.25rem; 
}
.year-group::before {
  content: "";
  position: absolute;
  left: 0.25rem;
  top: 0.3rem;
  bottom: 0.3rem;
  width: 2px;
  background: var(--bs-border-color);
}

.year-label {
  font-weight: 700;
  margin: .8rem 0 .4rem 0;
}

.tl-item {
  position: relative;
  margin-bottom: 1.25rem;   
  padding-left: .75rem;
}
.tl-item::before {
  content: "";
  position: absolute;
  left: -0.4rem; top: .45rem;
  width: .5rem; height: .5rem; border-radius: 50%;
  background: var(--bs-primary);
  box-shadow: 0 0 0 3px var(--bs-body-bg);
}

.tl-title { margin: 0 0 .1rem 0; font-weight: 400; }
.tl-title a {
  display: inline-block;
  color: var(--bs-primary);
  opacity: .85;
  text-decoration: none;
  transition: opacity .15s ease, transform .15s ease;
}
.tl-title a:hover {
  opacity: 1;
  transform: translateY(-1px);
}

.tl-meta  { color: var(--bs-secondary-color); font-size: .95rem; }
.tl-meta em { font-style: italic; } 

.res-links {
  margin-top: .25rem;
  font-size: .9rem;
  color: var(--bs-secondary-color);
}
.res-links a {
  padding: 0 .25rem; border-radius: .4rem;
  transition: background-color .15s ease, color .15s ease;
  text-decoration: none;
}
.res-links a:hover { background: rgba(0,0,0,.05); color: var(--bs-body-color); }
.res-links i { margin-right: .25rem; }

```

```{r}
if (!requireNamespace("bibtex", quietly = TRUE)) stop("Install the 'bibtex' package.")
if (!requireNamespace("htmltools", quietly = TRUE)) stop("Install the 'htmltools' package.")

bib <- bibtex::read.bib("publications.bib")

# ---------- Helpers ----------
chr1 <- function(x) if (is.null(x) || length(x) == 0) "" else as.character(x[[1]])

strip_braces <- function(s) {
  s <- chr1(s)
  gsub("[{}]", "", s, perl = TRUE)
}

fmt_authors_last <- function(pers) {
  if (length(pers) == 0) return("")
  last <- vapply(pers, function(x) {
    fam <- paste(x$family, collapse = " ")
    if (nzchar(fam)) fam else {
      giv <- paste(x$given, collapse = " ")
      if (nzchar(giv)) giv else ""
    }
  }, character(1))
  last <- last[nzchar(last)]
  n <- length(last)
  if (n == 0) return("")
  if (n == 1) return(last)
  if (n == 2) return(paste(last, collapse = " & "))
  paste0(paste(last[-n], collapse = ", "), ", & ", last[n])
}

extract_year <- function(x) {
  y <- chr1(x$year)
  if (grepl("^\\d{4}$", y)) return(y)
  d <- chr1(x$date)
  m <- regexpr("\\d{4}", d)
  if (m > 0) return(substr(d, m, m + 3))
  ""  # no valid year found
}

to_row <- function(x, key = "") {
  container <- x$journal; if (!nzchar(chr1(container))) container <- x$booktitle
  if (!nzchar(chr1(container))) container <- x$publisher
  doi_val  <- chr1(x$doi)
  doi_link <- if (nzchar(doi_val)) paste0("https://doi.org/", doi_val) else ""
  list(
    key         = key,
    title       = strip_braces(x$title),
    authors     = fmt_authors_last(x$author),
    year        = extract_year(x),
    publication = strip_braces(container),
    doi         = doi_link,
    preprint    = chr1(x$preprint),
    materials   = chr1(x$materials)
  )
}

# Build rows (carry citation keys for error messages)
rows <- Map(to_row, as.list(bib), names(bib))

# ---------- Validate years (fail fast) ----------
yrs_chr <- vapply(rows, `[[`, "", "year")
bad <- which(!grepl("^\\d{4}$", yrs_chr))
if (length(bad)) {
  offenders <- vapply(rows[bad], function(r)
    sprintf("%s (year='%s')", if (nzchar(r$key)) r$key else substr(r$title, 1, 60), r$year), "")
  stop(
    paste0(
      "Some bibliography entries have missing/invalid years (need YYYY):\n  - ",
      paste(offenders, collapse = "\n  - "),
      "\nFix the 'year' (or 'date') field in your .bib and re-render."
    ),
    call. = FALSE
  )
}

# ---------- Sort rows: year desc, then title asc ----------
year_num0 <- vapply(rows, \(r) as.numeric(r$year), 0)             # pre-sort
title_vec <- vapply(rows, \(r) tolower(r$title), "")
ord <- order(-year_num0, title_vec)
rows <- rows[ord]

# Recompute year_num AFTER sorting (this was the bug)
year_num <- vapply(rows, \(r) as.numeric(r$year), 0)
```

```{r}
#| results: 'asis'

render_timeline <- function(rows_sub) {
  if (!length(rows_sub)) {
    cat('<p class="text-muted">No publications.</p>')
    return(invisible())
  }
  yrs_sub <- vapply(rows_sub, `[[`, "", "year")
  num_years <- sort(as.numeric(unique(yrs_sub)), decreasing = TRUE)

  cat('<div class="timeline">')
  for (yr in as.character(num_years)) {
    group <- rows_sub[yrs_sub == yr]
    if (length(group) == 0) next

    cat('<section class="year-group">')
    cat(sprintf('<div class="year-label">%s</div>', htmltools::htmlEscape(yr)))

    for (r in group) {
      title_html   <- htmltools::htmlEscape(r$title)
      authors_html <- htmltools::htmlEscape(r$authors)
      pub_html     <- htmltools::htmlEscape(r$publication)

      cat('<div class="tl-item">')

      # Title link priority: DOI > Preprint > plain text
      link_href <- if (nzchar(r$doi)) r$doi else if (nzchar(r$preprint)) r$preprint else ""
      if (nzchar(link_href)) {
        cat(sprintf(
          '<div class="tl-title"><a href="%s" target="_blank" rel="noopener">%s</a></div>',
          htmltools::htmlEscape(link_href), title_html
        ))
      } else {
        cat(sprintf('<div class="tl-title">%s</div>', title_html))
      }

      # Meta line: Authors · <em>Venue</em>
      if (nzchar(r$publication)) {
        cat(sprintf('<div class="tl-meta">%s · <em>%s</em></div>', authors_html, pub_html))
      } else {
        cat(sprintf('<div class="tl-meta">%s</div>', authors_html))
      }

      # Compact resource links (inline text)
      cat('<div class="res-links">')
      if (nzchar(r$preprint)) {
        cat(sprintf(
          '<a href="%s" class="link-secondary" target="_blank" rel="noopener" title="Preprint"><i class="bi bi-file-earmark-text"></i> preprint</a> ',
          htmltools::htmlEscape(r$preprint)
        ))
      }
      if (nzchar(r$materials)) {
        cat(sprintf(
          '<a href="%s" class="link-secondary" target="_blank" rel="noopener" title="Materials"><i class="bi bi-file-earmark-zip"></i> materials</a> ',
          htmltools::htmlEscape(r$materials)
        ))
      }
      cat('</div>') # res-links

      cat('</div>') # tl-item
    }
    cat('</section>')
  }
  cat('</div>')
}

# Split into sections: Since Joining KU (>=2020) vs Before Joining KU (<2020)
since_idx  <- year_num >= 2020
before_idx <- year_num < 2020

cat('<h2>Since Joining KU</h2>',
    'Click the **title** of any publication to visit the publisher’s page. When shown, the **preprint** link provides a freely accessible version, and the **materials** link points to open-science resources (e.g., data, code, files) for that paper.')
render_timeline(rows[since_idx])

cat('<h2>Before Joining KU</h2>', 'Click the **title** of any publication to visit the publisher’s page. When shown, the **preprint** link provides a freely accessible version, and the **materials** link points to open-science resources (e.g., data, code, files) for that paper.')
render_timeline(rows[before_idx])
```

